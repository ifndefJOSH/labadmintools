# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    #- name: Test with pytest
    #  run: |
    #    pytest

    # Create executable files using pyinstaller
    - name: PyInstallerLinux
      id: pyinstLinux
      uses: JackMcKew/pyinstaller-action-linux@0.1.4
      with:
        path: src
        
    - uses: actions/upload-artifact@v2
      with:
        name: labadmintools
        path: ${{ steps.pyinstLinux.outputs.output }}

    - name: PyInstallerWindows
      id: pyinstWindows
      uses: JackMcKew/pyinstaller-action-windows@v0.1.2
      with:
        path: src
    - uses: actions/upload-artifact@v2
      with:
        name: labadmintools.exe
        path: ${{ steps.pyinstWindows.outputs.output }}
            
            
